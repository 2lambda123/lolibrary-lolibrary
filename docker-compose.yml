---
version: '3'
services:
  web:
    image: "amelia/php:7.2"
    volumes:
      - "./app/next:/srv/code"
      - "./pki/certificate.pem:/etc/nginx/certs/certificate.pem:ro"
      - "./pki/privkey.pem:/etc/nginx/certs/privkey.pem:ro"
      - "./.env:/secrets/environment/.env:ro"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - db.lolibrary.test
      - redis.lolibrary.test
      - minio.lolibrary.test
      - imaginary.lolibrary.test
    hostname: lolibrary.test

  app:
    image: "amelia/php:7.2"
    command: ["sh", "-c", "php artisan wait:db && php artisan wait:redis && php artisan horizon"]
    volumes:
      - "./app/next:/srv/code"
      - "./pki/certificate.pem:/pki/certificate.pem:ro"
      - "./pki/privkey.pem:/pki/privkey.pem:ro"
      - "./.env:/secrets/environment/.env:ro"
    depends_on:
      - db.lolibrary.test
      - redis.lolibrary.test
      - minio.lolibrary.test
      - imaginary.lolibrary.test

  node:
    image: "node:9"
    command: ["sh", "-c", "npm rebuild node-sass --force && npm install && npm run watch"]
    working_dir: "/home/node"
    volumes:
      - "./app/next:/home/node"

  imaginary.lolibrary.test:
    image: "h2non/imaginary:1"
    volumes:
      - "./pki/certificate.pem:/pki/certificate.pem:ro"
      - "./pki/privkey.pem:/pki/privkey.pem:ro"
    command: ["imaginary",
      "-certfile", "/pki/certificate.pem",
      "-keyfile", "/pki/privkey.pem",
      "-p", "9004"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/ || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
    hostname: imaginary.lolibrary.test
    ports:
      - "9004:9004"
  
  minio.lolibrary.test:
    image: "minio/minio:latest"
    volumes:
      - "minio-data:/data"
      - "./pki/certificate.pem:/root/.minio/public.crt:ro"
      - "./pki/privkey.pem:/root/.minio/private.key:ro"
    command: ["minio", "server", "/data"]
    environment:
      MINIO_ACCESS_KEY: MinioAccessKey
      MINIO_SECRET_KEY: SecretExampleKey
    hostname: minio.lolibrary.test
    ports:
      - "9003:9003"
  
  db.lolibrary.test:
    image: "postgres:10-alpine"
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: lolibrary
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./sql:/docker-entrypoint-init.db:ro"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d lolibrary -h localhost -U lolibrary -p 5432"]
      interval: 5s
      timeout: 8s
      retries: 3
    hostname: db.lolibrary.test
    ports:
      - "5432:5432"
    
  redis.lolibrary.test:
    image: "redis:alpine"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - "redis-data:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3
    hostname: redis.lolibrary.test
    ports:
      - "6379:6379"
volumes:
  db-data:
  redis-data:
  minio-data:

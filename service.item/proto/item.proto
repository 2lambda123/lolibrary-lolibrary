syntax = "proto3";
package itemproto;

import "github.com/lolibrary/lolibrary/cmd/protoc-gen-router/proto/router.proto";

service item {
    option (router).name = "service.item";
    option (router).short_name = "s-item";

    rpc ReadItem (GETReadItemRequest) returns (GETReadItemResponse) {
        option (handler).path = "/read";
    }

    rpc CreateItem (POSTCreateItemRequest) returns (POSTCreateItemResponse) {
        option (handler).path = "/create";
    }
}

message Item {
    string id = 1;
    string slug = 2;
    string brand_id = 3;
    string category_id = 4;
    string user_id = 5;
    string image_id = 6;
    string publisher_id = 7;
    string english_name = 8;
    string foreign_name = 9;
    string product_number = 10;
    string currency = 11;
    string price = 12;
    int32 year = 13;
    string notes = 14;

    // status is used for draft/non-draft but could be a bitmask later.
    int32 status = 40;

    // key-value searchable metadata.
    map<string, string> metadata = 50;

    // timestamps
    string created_at = 100;
    string updated_at = 101;
    string published_at = 102;
}

// GET /service.item/read {"id": "<uuid>"}

message GETReadItemRequest {
    string id = 1;
    string slug = 2;
}

message GETReadItemResponse {
    Item item = 1;
}

// POST /service.item/create {"item": {...}}

message POSTCreateItemRequest {
    string id = 1;
    string slug = 2;
    string brand_id = 3;
    string category_id = 4;
    string user_id = 5;
    string image_id = 6;
    // no publisher id or timestamps on creation
    string english_name = 8;
    string foreign_name = 9;
    string product_number = 10;
    string currency = 11;
    string price = 12;
    int32 year = 13;
    string notes = 14;
}

message POSTCreateItemResponse {
    Item item = 1;
}

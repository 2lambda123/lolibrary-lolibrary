pid /var/run/nginx.pid;
error_log /proc/self/fd/2 info;

events {
    multi_accept on;
    use epoll;
}

http {
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_comp_level 2;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain application/x-javascript text/xml text/css application/xml;
    gzip_disable "msie6";

    # TLS config
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparam.pem;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/certs/certificate.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # STS headers, et al.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;

    client_max_body_size 500M;

    upstream lolibrary.test {
        server www.lolibrary.test:8080;
    }

    upstream minio.lolibrary.test {
        server minio.lolibrary.test:9000;
    }

    server {
        listen 443 ssl http2;
        server_name www.lolibrary.test lolibrary.test;

        location / {
            proxy_pass http://lolibrary.test;
        }
    }

    server {
        listen 443 ssl http2;
        server_name minio.lolibrary.test;

        location / {
            proxy_pass http://minio.lolibrary.test;
        }
    }

    server {
        listen 80 default_server;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2 default_server;

        location / {
            return 404;
        }
    }

    server {
        listen 127.0.0.1:8080;

        location /status {
            stub_status on;
            access_log off;
        }
    }
}
